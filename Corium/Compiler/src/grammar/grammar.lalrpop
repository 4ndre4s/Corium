
use crate::ast::{Expr, Operator};
use crate::literal::*;

grammar;

pub Expr: Box<Expr> = {
    Expr ExprOp Imm => Box::new(Expr::Operation(<>)),
    Imm
};

pub ExprOp: Operator = {
    "+" => Operator::Add,
    "-" => Operator::Sub,
    "*" => Operator::Mul,
    "/" => Operator::Div,
    "%" => Operator::Mod
};

pub Imm: Box<Expr> = {
    Int => Box::new(Expr::Imm(<>)),
    "(" <Expr> ")"
};

pub Int: i64 = {
    r"-?[0-9_]+" => parse_int_literal_dec(<>),
    r"-?0[x][0-9a-fA-F_]+" => parse_int_literal_hex(<>),
    r"-?0[b][0-1_]+" => parse_int_literal_bin(<>),
    r"-?0[o][0-7_]+" => parse_int_literal_oct(<>)
};